<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on takecian</title>
    <link>https://takecian.github.io/note/</link>
    <description>Recent content in Notes on takecian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    
	<atom:link href="https://takecian.github.io/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google について</title>
      <link>https://takecian.github.io/note/google/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://takecian.github.io/note/google/</guid>
      <description>Google How Google Works 文化   従来型のガチガチな計画は意味がない（予定より早めにリリースすることなんてある？）
 現場のエンジニアに裁量を与えよう    カバの言う事は聞くな（カバ＝一番偉い人）
 意思決定の質と蓬春の水準は無関係 意義を唱える義務・・ある考え方に問題があると思ったら懸念を表明する義務    7 のルール
 マネージャーは最低７人の直属の部下を持つ事  フラットな組織になりやすい マイクロマネジメントになりにくい（物理的に見る時間が足りなくなる）      独立採算制にしない
 自分たちの事業のことを優先して考えるようになるから    一番影響力の大きな人を中心に会社を作る
 マネージャーは肩書きが作る、リーダーは周りの人間が作る    死ぬほど働いているのに楽しくないと言う場合、何か間違っている
  戦略 人材 意思決定 コミュニケーション イノベーション WORK Rules!  Team Geek 天才プログラマの神話 素晴らしいチーム文化 船にはキャプテンが必要 有害な人に対処する 組織的操作の技法 ユーザーも人間 </description>
    </item>
    
    <item>
      <title>Meeting template</title>
      <link>https://takecian.github.io/note/meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://takecian.github.io/note/meeting/</guid>
      <description>Meeting template  Goal of this meeting(事前に準備)  ミーティングの目的を事前に共有する   Agenda(事前に準備)  目的を達成するために話し合う議題   When we can finish meeting(事前に準備)  何ができればミーティングを終了できるかを明らかにする   Action Item  ミーティングで明らかになった Action Item を書き出す    </description>
    </item>
    
    <item>
      <title>Scrum の時間配分</title>
      <link>https://takecian.github.io/note/scrum_calendar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://takecian.github.io/note/scrum_calendar/</guid>
      <description>1week sprint の例 Sprint planning 1(What) - 1 Hour この Sprint で何を成し遂げたいかを計画する。
Sprint planning 2(How) - 1 Hour  この Sprint で成し遂げたいことをどうやって成し遂げるか計画する。
Sprint review - 1 Hour Sprint で実現したものを確認して、プロダクトの方向性について議論する。
できたものの善し悪しを話す場ではないので注意。
Sprint retrospective - 1 Hour Sprint で起きた出来事を振り返って次Sprintをより良いものにするには何をすれば良いか決める。
Backlog refinement - 1 Hour Backlog の優先度の見直し、大きい User Story の分割を行う。 かける時間は sprint の期間の5%以内に収めるのが目安。
Daily scrum - 15min 前回の Daily scrum の時点から、
 やったこと やること 困っていること を共有する。長くても15分以内で終わらせる。  </description>
    </item>
    
    <item>
      <title>プロダクト開発で気をつける事</title>
      <link>https://takecian.github.io/note/ideanote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://takecian.github.io/note/ideanote/</guid>
      <description>作り始める前に確認する  製品によってどんな問題を解決するのか 誰のためのどんな問題を解決するのか 市場の大きさは？ 製品化を成功を評価する方法はあるか 競合はあるか 勝てる要素はあるか なぜ今やるのか どうやって製品を市場に出すか 成功のために必要な要素は 以上を前提を踏まえた上でやるべきかどうか  作り始めてから気をつけること  この製品はターゲット顧客の心に届いているか 全力を尽くして使いやすいものにしただろうか リリースする時点の競争で競合に勝てるか どう差別化できているか説明できるか 実際に動いているか 製品に欠けているものはないだろうか 製品の強みが顧客の大切なことと一致しているか お金を払う価値が有るか チームメンバーも製品の強みを理解しているか  </description>
    </item>
    
  </channel>
</rss>